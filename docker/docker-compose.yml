---
version: '3'
services:
  zipkin:
    image: openzipkin/zipkin:latest
    restart: always
    hostname: zipkin
    container_name: zipkin
    ports:
      - 9411:9411
#    networks:
#      - confluent
  zookeeper:
    image: confluentinc/cp-zookeeper:6.0.1
    restart: always
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - 2181:2181
    volumes:
      - data-zk-log-1:/var/lib/zookeeper/log
      - data-zk-data-1:/var/lib/zookeeper/data
#    networks:
#      - confluent
    environment:
      - ZOOKEEPER_SERVER_ID=1
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
      - ZOOKEEPER_INIT_LIMIT=5
      - ZOOKEEPER_SYNC_LIMIT=2
      - ZOOKEEPER_SERVERS=zk-1:2888:3888
  kafka:
    image: confluentinc/cp-enterprise-kafka:6.0.1
    restart: always
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    volumes:
      - data-kafka-1:/var/lib/kafka/data
#    networks:
#      - confluent
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG_RETENTION_HOURS: 1
      KAFKA_LOG_SEGMENT_BYTES: 536870912
      KAFKA_LOG_RETENTION_BYTES: 536870912
      KAFKA_METRIC_REPORTERS: "io.confluent.metrics.reporter.ConfluentMetricsReporter"
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: "kafka:29092"
  kafkadrop3:
    image: obsidiandynamics/kafdrop
    restart: always
    hostname: kafkadrop
    container_name: kafkadrop
    depends_on:
      - kafka
    ports:
      - 9000:9000
#    networks:
#      - confluent
    environment:
      ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKERCONNECT: "kafka:29092"
      JVM_OPTS: "-Xms32M -Xmx64M"
      SERVER_SERVLET_CONTEXTPATH: "/"
  kafka-schema-registry:
    image: confluentinc/cp-schema-registry:6.0.1
    restart: always
    hostname: schema-registry
    container_name: schema-registry
    ports:
      - "9081:9081"
#    networks:
#      - confluent
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:29092
      SCHEMA_REGISTRY_HOST_NAME: kafka-schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:9081
    depends_on:
      - zookeeper
      - kafka
  kafka-rest-proxy:
    image: confluentinc/cp-kafka-rest:6.0.1
    restart: always
    hostname: rest-proxy
    container_name: rest-proxy
    ports:
      - "8888:8888"
    environment:
      # KAFKA_REST_ZOOKEEPER_CONNECT: zoo1:2181
      KAFKA_REST_LISTENERS: http://0.0.0.0:8888/
      KAFKA_REST_SCHEMA_REGISTRY_URL: http://kafka-schema-registry:9081/
      KAFKA_REST_HOST_NAME: kafka-controller-proxy
      KAFKA_REST_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:29092
    depends_on:
      - zookeeper
      - kafka
      - kafka-schema-registry
  connect:
    image: confluentinc/cp-kafka-connect:6.0.1
    restart: always
    hostname: connect
    container_name: connect
    ports:
      - "8083:8083"
    volumes:
      - ./data:/data
#    networks:
#      - confluent
    environment:
#      CONNECT_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
#      CONNECT_PRODUCER_CONFLUENT_MONITORING_INTERCEPTOR_BOOTSTRAP_SERVERS: kafka:29092
#      CONNECT_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
#      CONNECT_CONSUMER_CONFLUENT_MONITORING_INTERCEPTOR_BOOTSTRAP_SERVERS: kafka:29092
      CONNECT_BOOTSTRAP_SERVERS: kafka:29092
      CONNECT_GROUP_ID: "connect"
#      CONNECT_CONFIG_STORAGE_TOPIC: "connect-configs"
#      CONNECT_OFFSET_STORAGE_TOPIC: "connect-offsets"
#      CONNECT_STATUS_STORAGE_TOPIC: "connect-statuses"
      CONNECT_KEY_CONVERTER: "io.confluent.connect.avro.AvroConverter"
      CONNECT_VALUE_CONVERTER: "io.confluent.connect.avro.AvroConverter"
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: "http://0.0.0.0:9081"
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: "http://0.0.0.0:9081"
      CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_REST_ADVERTISED_HOST_NAME: "connect"
      CONNECT_LOG4J_ROOT_LOGLEVEL: WARN
      CONNECT_LOG4J_LOGGERS: org.reflections=ERROR
      CONNECT_PLUGIN_PATH: /usr/share/java
      CONNECT_REST_HOST_NAME: "connect"
      CONNECT_REST_PORT: 8083
      CONNECT_CUB_KAFKA_TIMEOUT: 120
  ksqldb:
    image: confluentinc/cp-ksqldb-server:6.0.1
    restart: always
    hostname: ksqldb
    container_name: ksqldb
    ports:
      - "8088:8088"
#    networks:
#      - confluent
    environment:
      KSQL_CONFIG_DIR: "/etc/ksql"
      KSQL_LOG4J_OPTS: "-Dlog4j.configuration=file:/etc/ksqldb/log4j-rolling.properties"
      KSQL_BOOTSTRAP_SERVERS: kafka:29092
      KSQL_HOST_NAME: ksqldb
      KSQL_APPLICATION_ID: "etl-demo"
      KSQL_LISTENERS: "http://0.0.0.0:8088"
      # Set the buffer cache to 0 so that the KSQL CLI shows all updates to KTables for learning purposes.
      # The default is 10 MB, which means records in a KTable are compacted before showing output.
      # Change cache.max.bytes.buffering and commit.interval.ms to tune this behavior.
      KSQL_CACHE_MAX_BYTES_BUFFERING: 0
      KSQL_KSQL_SCHEMA_REGISTRY_URL: "http://0.0.0.0:9081"
      KSQL_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
      KSQL_PRODUCER_CONFLUENT_MONITORING_INTERCEPTOR_BOOTSTRAP_SERVERS: kafka:29092
      KSQL_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
      KSQL_CONSUMER_CONFLUENT_MONITORING_INTERCEPTOR_BOOTSTRAP_SERVERS: kafka:29092
  control-center:
    image: confluentinc/cp-enterprise-control-center:6.0.1
    restart: always
    hostname: control-center
    container_name: control-center
    ports:
      - "9021:9021"
#    networks:
#      - confluent
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: kafka:29092
      CONTROL_CENTER_ZOOKEEPER_CONNECT: zookeeper:2181
      CONTROL_CENTER_STREAMS_NUM_STREAM_THREADS: 4
      CONTROL_CENTER_REPLICATION_FACTOR: 1
#      CONTROL_CENTER_CONNECT_CLUSTER: "connect:8083"
      CONTROL_CENTER_KSQL_URL: "http://localhost:8088"
      CONTROL_CENTER_KSQL_ADVERTISED_URL: "http://localhost:8088"
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://0.0.0.0:9081"
      CONTROL_CENTER_UI_AUTOUPDATE_ENABLE: "false"

  tools:
    image: cnfltraining/training-tools:6.0
    restart: always
    hostname: tools
    container_name: tools
    volumes:
      - app-1:/apps
    environment:
      CLASSPATH: "/usr/share/java/monitoring-interceptors/monitoring-interceptors-6.0.0.jar"
    working_dir: /apps
#    networks:
#      - confluent
    command: /bin/bash
    tty: true

volumes:
  data-zk-log-1:
  data-zk-data-1:
  data-kafka-1:
  app-1:
#networks:
#  confluent: